<?php

/**
 * @file
 * Primary hooks and functions for the Loyalist module.
 */

use Drupal\Core\TempStore\TempStoreException;

/**
 * Implements hook_page_attachments().
 *
 * @see hook_page_attachments()
 */
function loyalist_page_attachments(&$attachments) {
  /* @var \Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');

  if (!$admin_context->isAdminRoute()) {

    /* @var \Drupal\Core\Config\ImmutableConfig $config */
    $config = \Drupal::config('loyalist.settings');

    /* @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $event_dispatcher */
    $event_dispatcher = \Drupal::service('event_dispatcher');

    /* @var \Drupal\Core\TempStore\PrivateTempStore $temp_store */
    $temp_store = \Drupal::service('tempstore.private')->get('loyalist');

    $attachments['#attached']['library'][] = 'loyalist/loyalist';
    $attachments['#attached']['drupalSettings']['loyalist'] = [
      'cooldown' => $config->get('cooldown'),
      'interval' => $config->get('interval'),
      'visits' => $config->get('visits'),
    ];

    // Dispatch a pending event.
    if ($event = $temp_store->get('event')) {
      $event_dispatcher->dispatch($event::EVENT_NAME, $event);

      try {
        $temp_store->delete('event');
      }
      catch (TempStoreException $e) {
        watchdog_exception('loyalist', $e);
      }
    }

  }
}
